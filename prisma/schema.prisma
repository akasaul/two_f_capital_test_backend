generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String       @unique
  phoneNumber String       @unique
  password    String
  roleId      Int
  Role        Role         @relation(fields: [roleId], references: [id])
  Restaurant  Restaurant[]
  Order       Order[]
}

model Role {
  id           Int          @id @default(autoincrement())
  name         String
  isActive     Boolean      @default(true)
  permissions  Permission[] @relation("RolePermissions")
  priceUser    User[]
  restaurantId Int?
  Restaurant   Restaurant?  @relation(fields: [restaurantId], references: [id])
}

model Permission {
  id         Int    @id @default(autoincrement())
  name       String
  action     String
  subject    String
  conditions Json?
  roles      Role[] @relation("RolePermissions")
}

model Pizza {
  id           Int        @id @default(autoincrement())
  name         String
  price        Float
  pizzaCover   String
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  toppings     Topping[]  @relation("PizzaToppings")
  Order        Order[]
}

model Topping {
  id           Int        @id @default(autoincrement())
  name         String
  price        Float
  pizzas       Pizza[]    @relation("PizzaToppings")
  Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  orders       Order[]    @relation("OrderToppings")
}

model Restaurant {
  id          Int       @id @default(autoincrement())
  name        String
  location    String
  logo        String
  phoneNumber String    @unique
  manager     User      @relation(fields: [managerId], references: [id])
  managerId   Int
  pizzas      Pizza[]
  Role        Role[]
  Topping     Topping[]
  Order       Order[]
}

enum OrderStatus {
  PENDING
  DELIVERED
  PREPARING
}

model Order {
  id           Int         @id @default(autoincrement())
  userId       Int
  qty          Int
  user         User        @relation(fields: [userId], references: [id])
  restaurantId Int
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  pizzaId      Int
  pizza        Pizza       @relation(fields: [pizzaId], references: [id])
  toppings     Topping[]   @relation("OrderToppings")
  status       OrderStatus @default(PENDING)
  createdAt    DateTime    @default(now())
}
